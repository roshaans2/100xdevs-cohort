Types of Databases - 

NoSQL databases 
Store data in a schema-less fashion. Extremely lean and fast way to store data. 
Examples - MongoDB, 

Graph databases 
Data is stored in the form of a graph. Specially useful in cases where relationships need to be stored (social networks
Examples - Neo4j

Vector databases
Stores data in the form of vectors
Useful in Machine learning
Examples - Pinecone

SQL databases
Stores data in the form of rows
Most full stack applications will use this
Examples - MySQL, Postgres

Why not NoSQL?

It’s schemaless properties make it ideal to for bootstraping a project fast. But as your app grows, this property makes it very easy for data to get curropted

What is schemaless?
Different rows can have different schema (keys/types)

Problems with NoSQL - 
Can lead to inconsistent database
Can cause runtime errors 
Is too flexible for an app that needs strictness

Why SQL?
SQL databases have a strict schema. They require you to
Define your schema
Put in data that follows that schema
Update the schema as your app changes and perform migrations
 
So there are 4 parts when using an SQL database (not connecting it to Node.js, just running it and putting data in it)
Running the database.
Using a library that let’s you connect and put data in it.
Creating a table and defining it’s schema.
Run queries on the database to interact with the data (Insert/Update/Delete)




 